apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "2"
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"deployment.kubernetes.io/revision":"1"},"creationTimestamp":null,"generation":1,"labels":{"app":"photodb"},"name":"photodb","namespace":"photodb","selfLink":"/apis/apps/v1/namespaces/photodb/deployments/photodb"},"spec":{"progressDeadlineSeconds":600,"replicas":1,"revisionHistoryLimit":10,"selector":{"matchLabels":{"app":"photodb"}},"strategy":{"rollingUpdate":{"maxSurge":"25%","maxUnavailable":"25%"},"type":"RollingUpdate"},"template":{"metadata":{"creationTimestamp":null,"labels":{"app":"photodb"}},"spec":{"containers":[{"image":"djjudas21/photodb:0.1.0","imagePullPolicy":"IfNotPresent","name":"photodb","resources":{},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","volumeMounts":[{"mountPath":"/mnt","name":"hostpath-volume"}]}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","schedulerName":"default-scheduler","securityContext":{},"terminationGracePeriodSeconds":30,"volumes":[{"name":"hostpath-volume","persistentVolumeClaim":{"claimName":"photodb"}}]}}},"status":{}}
  creationTimestamp: null
  generation: 1
  labels:
    app: photodb
  name: photodb
  selfLink: /apis/apps/v1/namespaces/photodb/deployments/photodb
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: photodb
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: photodb
    spec:
      containers:
      - image: djjudas21/photodb:0.1.0
        imagePullPolicy: IfNotPresent
        name: photodb
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /var/www/photodb/db
          name: sqlite-volume
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - name: sqlite-volume
        persistentVolumeClaim:
          claimName: photodb-sqlite
status: {}
