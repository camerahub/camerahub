apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: photodb
  name: photodb
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: photodb
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: photodb
    spec:
      containers:
      - image: djjudas21/photodb
        imagePullPolicy: IfNotPresent
        name: photodb
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /var/www/photodb/db
          name: sqlite-volume
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      env:
      - name: DB_USER
        valueFrom:
          secretKeyRef:
            name: postgres-credentials
            key: user
      - name: DB_PASS
        valueFrom:
          secretKeyRef:
            name: postgres-credentials
            key: password
      - name: DB_HOST
        value: postgres-service
      - name: DB_NAME
        value: photodb
      - name: DB_PORT
        value: 5432
      - name: DB_ENGINE
        value: django.db.backends.postgresql
      volumes:
      - name: sqlite-volume
        persistentVolumeClaim:
          claimName: photodb-sqlite
