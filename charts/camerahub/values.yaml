# Default values for camerahub.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Global settings
global:
  postgresql:
    username: postgres
    password: postgres
    database: camerahub

# Settings for Redis subchart
redis:
  usePassword: false
  cluster:
    enabled: true
    # Additional slaves, excluding the master
    slaveCount: 1
  master:
    persistence:
      storageClass: ""
      accessModes: [ReadWriteOnce]
      size: 1Gi
  slave:
    persistence:
      storageClass: ""
      accessModes: [ReadWriteOnce]
      size: 1Gi

# Settings for Postgresql-ha subchart
postgresql-ha:
  postgresql:
    # Totel replicas
    replicaCount: 2
  persistence:
    storageClass: ""
    accessMode: ReadWriteOnce
    size: 8Gi

camerahub:
  secretKey: OverrideMe!
  adminEmail: admin@example.com
  adminPassword: admin
  production: true
  redis: false
  domain:
  email:
    backend: "django.core.mail.backends.filebased.EmailBackend"
    sendgridKey: ""

    host: ""
    user: ""
    password: ""
    useTLS: ""
    UseSSL: ""
    port: ""

# Replicas of CameraHub app server
replicaCount: 2

image:
  repository: djjudas21/camerahub
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 8000

ingress:
  enabled: false
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/issuer: ""
    cert-manager.io/cluster-issuer: ""
  tls: false

# Storage for CameraHub media and backups
storage:
  storageClass: ""
  size: 8Gi
  accessModes: [ReadWriteMany]

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi
