apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "camerahub.fullname" . }}-app
  labels:
    {{- include "camerahub.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "camerahub.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "camerahub.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "camerahub.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: app-port
              containerPort: 8000
              protocol: TCP
          {{- if .Values.livenessProbe.enabled }}
          livenessProbe:
            tcpSocket:
              port: app-port
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.livenessProbe.successThreshold }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
          {{- end }}
          {{- if .Values.readinessProbe.enabled }}
          readinessProbe:
            httpGet:
              path: /health/
              port: app-port
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.readinessProbe.successThreshold }}
            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
          {{- end }}
          env:
            - name: DJANGO_MANAGEPY_MIGRATE
              value: 'off'
            # Secrets first
            - name: CAMERAHUB_DB_PASS
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-secret
                  key: CAMERAHUB_DB_PASS
            - name: CAMERAHUB_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-secret
                  key: CAMERAHUB_SECRET_KEY
            - name: CAMERAHUB_SENDGRID_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-secret
                  key: CAMERAHUB_SENDGRID_KEY
                  optional: true
            - name: CAMERAHUB_EMAIL_HOST_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-secret
                  key: CAMERAHUB_EMAIL_HOST_PASSWORD
                  optional: true
            # then config
            - name: CAMERAHUB_DB_USER
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-config
                  key: CAMERAHUB_DB_USER            
            - name: CAMERAHUB_DB_HOST
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-config
                  key: CAMERAHUB_DB_HOST
            - name: CAMERAHUB_DB_NAME
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-config
                  key: CAMERAHUB_DB_NAME
            - name: CAMERAHUB_DOMAIN
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-config
                  key: CAMERAHUB_DOMAIN
                  optional: true
            - name: CAMERAHUB_EMAIL_BACKEND
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-config
                  key: CAMERAHUB_EMAIL_BACKEND
                  optional: true
            - name: CAMERAHUB_EMAIL_USE_TLS
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-config
                  key: CAMERAHUB_EMAIL_USE_TLS
                  optional: true
            - name: CAMERAHUB_EMAIL_USE_SSL
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-config
                  key: CAMERAHUB_EMAIL_USE_SSL
                  optional: true
            - name: CAMERAHUB_EMAIL_HOST
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-config
                  key: CAMERAHUB_EMAIL_HOST
                  optional: true
            - name: CAMERAHUB_EMAIL_HOST_USER
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-config
                  key: CAMERAHUB_EMAIL_HOST_USER
                  optional: true
            - name: CAMERAHUB_EMAIL_PORT
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-config
                  key: CAMERAHUB_EMAIL_PORT
                  optional: true
            - name: CAMERAHUB_STATUS_URL
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-config
                  key: CAMERAHUB_STATUS_URL
                  optional: true
            - name: CAMERAHUB_DB_PORT
              value: "5432"
            - name: CAMERAHUB_DB_ENGINE
              value: django.db.backends.postgresql
            - name: CAMERAHUB_PROD
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-config
                  key: CAMERAHUB_PROD
                  optional: true
          volumeMounts:
            - name: media
              mountPath: /camerahub/media
              readOnly: false
            - name: backup
              mountPath: /camerahub/backup
              readOnly: false
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      #dnsPolicy: ClusterFirst
      volumes:
      - name: media
        persistentVolumeClaim:
          claimName: media
      - name: backup
        persistentVolumeClaim:
          claimName: backup
