# Generated by Django 2.2.4 on 2019-09-11 13:03

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('schema', '0022_auto_20190911_1908'),
    ]

    operations = [
        migrations.AlterField(
            model_name='archive',
            name='max_height',
            field=models.PositiveIntegerField(blank=True, help_text='Maximum height of media that this archive can store', null=True),
        ),
        migrations.AlterField(
            model_name='archive',
            name='max_width',
            field=models.PositiveIntegerField(blank=True, help_text='Maximum width of media that this archive can store', null=True),
        ),
        migrations.AlterField(
            model_name='camera',
            name='manufactured',
            field=models.PositiveIntegerField(blank=True, help_text='Year of manufacture of the camera', null=True),
        ),
        migrations.AlterField(
            model_name='cameramodel',
            name='af_points',
            field=models.PositiveIntegerField(blank=True, help_text='Number of autofocus points', null=True, verbose_name='Autofocus points'),
        ),
        migrations.AlterField(
            model_name='cameramodel',
            name='battery_qty',
            field=models.PositiveIntegerField(blank=True, help_text='Quantity of batteries needed', null=True),
        ),
        migrations.AlterField(
            model_name='cameramodel',
            name='discontinued',
            field=models.PositiveIntegerField(blank=True, help_text='Year in which the camera model was discontinued', null=True),
        ),
        migrations.AlterField(
            model_name='cameramodel',
            name='int_flash_gn',
            field=models.PositiveIntegerField(blank=True, help_text='Guide number of internal flash', null=True, verbose_name='Internal flash guide number'),
        ),
        migrations.AlterField(
            model_name='cameramodel',
            name='introduced',
            field=models.PositiveIntegerField(blank=True, help_text='Year in which the camera model was introduced', null=True),
        ),
        migrations.AlterField(
            model_name='cameramodel',
            name='max_iso',
            field=models.PositiveIntegerField(blank=True, help_text='Maximum ISO the camera will accept for metering', null=True, verbose_name='Max ISO'),
        ),
        migrations.AlterField(
            model_name='cameramodel',
            name='meter_max_ev',
            field=models.PositiveIntegerField(blank=True, help_text='Highest EV/LV the built-in meter supports', null=True, verbose_name='Max EV'),
        ),
        migrations.AlterField(
            model_name='cameramodel',
            name='meter_min_ev',
            field=models.PositiveIntegerField(blank=True, help_text='Lowest EV/LV the built-in meter supports', null=True, verbose_name='Min EV'),
        ),
        migrations.AlterField(
            model_name='cameramodel',
            name='min_iso',
            field=models.PositiveIntegerField(blank=True, help_text='Minimum ISO the camera will accept for metering', null=True, verbose_name='Min ISO'),
        ),
        migrations.AlterField(
            model_name='cameramodel',
            name='viewfinder_coverage',
            field=models.PositiveIntegerField(blank=True, help_text='Percentage coverage of the viewfinder. Mostly applicable to SLRs.', null=True),
        ),
        migrations.AlterField(
            model_name='cameramodel',
            name='weight',
            field=models.PositiveIntegerField(blank=True, help_text='Weight of the camera body (without lens or batteries) in grammes (g)', null=True),
        ),
        migrations.AlterField(
            model_name='condition',
            name='max_rating',
            field=models.PositiveIntegerField(help_text='The highest percentage rating that encompasses this condition'),
        ),
        migrations.AlterField(
            model_name='condition',
            name='min_rating',
            field=models.PositiveIntegerField(help_text='The lowest percentage rating that encompasses this condition'),
        ),
        migrations.AlterField(
            model_name='enlarger',
            name='discontinued',
            field=models.PositiveIntegerField(blank=True, help_text='Year in which the enlarger was discontinued', null=True),
        ),
        migrations.AlterField(
            model_name='enlarger',
            name='introduced',
            field=models.PositiveIntegerField(blank=True, help_text='Year in which the enlarger was introduced', null=True),
        ),
        migrations.AlterField(
            model_name='film',
            name='dev_uses',
            field=models.PositiveIntegerField(blank=True, help_text='Number of previous uses of the developer', null=True),
        ),
        migrations.AlterField(
            model_name='film',
            name='exposed_at',
            field=models.PositiveIntegerField(blank=True, help_text='ISO at which the film was exposed', null=True),
        ),
        migrations.AlterField(
            model_name='film',
            name='frames',
            field=models.PositiveIntegerField(blank=True, help_text='Expected (not actual) number of frames from the film', null=True),
        ),
        migrations.AlterField(
            model_name='filmstock',
            name='iso',
            field=models.PositiveIntegerField(blank=True, help_text='Nominal ISO speed of the film', null=True, verbose_name='ISO'),
        ),
        migrations.AlterField(
            model_name='filter',
            name='qty',
            field=models.PositiveIntegerField(blank=True, default=1, help_text='Quantity of these filters available', null=True),
        ),
        migrations.AlterField(
            model_name='flash',
            name='battery_qty',
            field=models.PositiveIntegerField(blank=True, help_text='Quantity of batteries needed in this flash', null=True),
        ),
        migrations.AlterField(
            model_name='flash',
            name='guide_number',
            field=models.PositiveIntegerField(blank=True, help_text='Guide number of the flash', null=True),
        ),
        migrations.AlterField(
            model_name='lens',
            name='manufactured',
            field=models.PositiveIntegerField(blank=True, help_text='Year in which this specific lens was manufactured', null=True),
        ),
        migrations.AlterField(
            model_name='lensmodel',
            name='aperture_blades',
            field=models.PositiveIntegerField(blank=True, help_text='Number of aperture blades', null=True),
        ),
        migrations.AlterField(
            model_name='lensmodel',
            name='closest_focus',
            field=models.PositiveIntegerField(blank=True, help_text='The closest focus possible with this lens, in cm', null=True),
        ),
        migrations.AlterField(
            model_name='lensmodel',
            name='diameter',
            field=models.PositiveIntegerField(blank=True, help_text='Width of lens in mm', null=True),
        ),
        migrations.AlterField(
            model_name='lensmodel',
            name='discontinued',
            field=models.PositiveIntegerField(blank=True, help_text='Year in which this lens model was discontinued', null=True),
        ),
        migrations.AlterField(
            model_name='lensmodel',
            name='elements',
            field=models.PositiveIntegerField(blank=True, help_text='Number of optical lens elements', null=True),
        ),
        migrations.AlterField(
            model_name='lensmodel',
            name='groups',
            field=models.PositiveIntegerField(blank=True, help_text='Number of optical groups', null=True),
        ),
        migrations.AlterField(
            model_name='lensmodel',
            name='image_circle',
            field=models.PositiveIntegerField(blank=True, help_text='Diameter of image circle projected by lens, in mm', null=True),
        ),
        migrations.AlterField(
            model_name='lensmodel',
            name='introduced',
            field=models.PositiveIntegerField(blank=True, help_text='Year in which this lens model was introduced', null=True),
        ),
        migrations.AlterField(
            model_name='lensmodel',
            name='length',
            field=models.PositiveIntegerField(blank=True, help_text='Length of lens in mm', null=True),
        ),
        migrations.AlterField(
            model_name='lensmodel',
            name='max_focal_length',
            field=models.PositiveIntegerField(blank=True, help_text='Longest focal length of this lens, in mm', null=True),
        ),
        migrations.AlterField(
            model_name='lensmodel',
            name='min_focal_length',
            field=models.PositiveIntegerField(blank=True, help_text='Shortest focal length of this lens, in mm', null=True),
        ),
        migrations.AlterField(
            model_name='lensmodel',
            name='nominal_max_angle_diag',
            field=models.PositiveIntegerField(blank=True, help_text='Nominal maximum diagonal field of view from manufacturer specs', null=True, verbose_name='Max angle of view'),
        ),
        migrations.AlterField(
            model_name='lensmodel',
            name='nominal_min_angle_diag',
            field=models.PositiveIntegerField(blank=True, help_text='Nominal minimum diagonal field of view from manufacturer specs', null=True, verbose_name='Min angle of view'),
        ),
        migrations.AlterField(
            model_name='lensmodel',
            name='weight',
            field=models.PositiveIntegerField(blank=True, help_text='Weight of this lens, in grammes (g)', null=True),
        ),
        migrations.AlterField(
            model_name='lightmeter',
            name='max_asa',
            field=models.PositiveIntegerField(blank=True, help_text='Maximum ISO/ASA that this meter is capable of handling', null=True, verbose_name='Max ISO'),
        ),
        migrations.AlterField(
            model_name='lightmeter',
            name='max_lv',
            field=models.PositiveIntegerField(blank=True, help_text='Maximum light value (LV/EV) that this meter is capable of handling', null=True, verbose_name='Max LV'),
        ),
        migrations.AlterField(
            model_name='lightmeter',
            name='min_asa',
            field=models.PositiveIntegerField(blank=True, help_text='Minimum ISO/ASA that this meter is capable of handling', null=True, verbose_name='Min ISO'),
        ),
        migrations.AlterField(
            model_name='lightmeter',
            name='min_lv',
            field=models.PositiveIntegerField(blank=True, help_text='Minimum light value (LV/EV) that this meter is capable of handling', null=True, verbose_name='Min LV'),
        ),
        migrations.AlterField(
            model_name='manufacturer',
            name='dissolved',
            field=models.PositiveIntegerField(blank=True, help_text='Year in which the manufacturer was dissolved', null=True),
        ),
        migrations.AlterField(
            model_name='manufacturer',
            name='founded',
            field=models.PositiveIntegerField(blank=True, help_text='Year in which the manufacturer was founded', null=True),
        ),
        migrations.AlterField(
            model_name='movie',
            name='feet',
            field=models.PositiveIntegerField(blank=True, help_text='Length of this movie in feet', null=True),
        ),
        migrations.AlterField(
            model_name='movie',
            name='fps',
            field=models.PositiveIntegerField(blank=True, help_text='Frame rate of this movie, in fps', null=True, verbose_name='FPS'),
        ),
        migrations.AlterField(
            model_name='negative',
            name='focal_length',
            field=models.PositiveIntegerField(blank=True, help_text='If a zoom lens was used, specify the focal length of the lens', null=True),
        ),
        migrations.AlterField(
            model_name='negativesize',
            name='area',
            field=models.PositiveIntegerField(blank=True, help_text='Area of this negative size in sq. mm', null=True),
        ),
        migrations.AlterField(
            model_name='order',
            name='height',
            field=models.PositiveIntegerField(blank=True, help_text='Height of print to be made', null=True),
        ),
        migrations.AlterField(
            model_name='order',
            name='width',
            field=models.PositiveIntegerField(blank=True, help_text='Width of print to be made', null=True),
        ),
        migrations.AlterField(
            model_name='scan',
            name='height',
            field=models.PositiveIntegerField(blank=True, help_text='Height of the scanned image in pixels', null=True),
        ),
        migrations.AlterField(
            model_name='scan',
            name='width',
            field=models.PositiveIntegerField(blank=True, help_text='Width of the scanned image in pixels', null=True),
        ),
        migrations.AlterField(
            model_name='teleconverter',
            name='elements',
            field=models.PositiveIntegerField(blank=True, help_text='Number of optical elements used in this teleconverter', null=True),
        ),
        migrations.AlterField(
            model_name='teleconverter',
            name='groups',
            field=models.PositiveIntegerField(blank=True, help_text='Number of optical groups used in this teleconverter', null=True),
        ),
    ]
