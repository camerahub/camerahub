# Generated by Django 2.1.10 on 2019-08-13 20:17

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('schema', '0009_auto_20190813_1338'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='focustype',
            name='id',
        ),
        migrations.AlterField(
            model_name='accessory',
            name='acquired',
            field=models.DateField(blank=True, verbose_name='Date that this accessory was acquired'),
        ),
        migrations.AlterField(
            model_name='accessory',
            name='cost',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=6, verbose_name='Purchase cost of the accessory'),
        ),
        migrations.AlterField(
            model_name='accessory',
            name='lost',
            field=models.DateField(blank=True, verbose_name='Date that this accessory was lost'),
        ),
        migrations.AlterField(
            model_name='accessory',
            name='lost_price',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=6, verbose_name='Sale price of the accessory'),
        ),
        migrations.AlterField(
            model_name='accessory',
            name='manufacturer',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='schema.Manufacturer'),
        ),
        migrations.AlterField(
            model_name='archive',
            name='location',
            field=models.CharField(blank=True, max_length=45, verbose_name='Location of this archive'),
        ),
        migrations.AlterField(
            model_name='archive',
            name='max_height',
            field=models.IntegerField(blank=True, verbose_name='Maximum height of media that this archive can store'),
        ),
        migrations.AlterField(
            model_name='archive',
            name='max_width',
            field=models.IntegerField(blank=True, verbose_name='Maximum width of media that this archive can store'),
        ),
        migrations.AlterField(
            model_name='archive',
            name='name',
            field=models.CharField(max_length=45, unique=True, verbose_name='Name of this archive'),
        ),
        migrations.AlterField(
            model_name='archive',
            name='storage',
            field=models.CharField(blank=True, max_length=45, verbose_name='The type of storage used for this archive, e.g. box, folder, ringbinder, etc'),
        ),
        migrations.AlterField(
            model_name='archivetype',
            name='type',
            field=models.CharField(max_length=45, unique=True, verbose_name='Name of this type of archive'),
        ),
        migrations.AlterField(
            model_name='battery',
            name='chemistry',
            field=models.CharField(blank=True, max_length=45, verbose_name='Battery chemistry (e.g. Alkaline, Lithium, etc)'),
        ),
        migrations.AlterField(
            model_name='battery',
            name='name',
            field=models.CharField(max_length=45, unique=True, verbose_name='Common name of the battery'),
        ),
        migrations.AlterField(
            model_name='battery',
            name='other_names',
            field=models.CharField(blank=True, max_length=45, verbose_name='Alternative names for this kind of battery'),
        ),
        migrations.AlterField(
            model_name='battery',
            name='voltage',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=5, verbose_name='Nominal voltage of the battery'),
        ),
        migrations.AlterField(
            model_name='bulkfilm',
            name='batch',
            field=models.CharField(blank=True, max_length=45, verbose_name='Batch code of this bulk roll'),
        ),
        migrations.AlterField(
            model_name='bulkfilm',
            name='cost',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=6, verbose_name='Purchase cost of this bulk roll'),
        ),
        migrations.AlterField(
            model_name='bulkfilm',
            name='expiry',
            field=models.DateField(blank=True, verbose_name='Expiry date of this bulk roll'),
        ),
        migrations.AlterField(
            model_name='bulkfilm',
            name='purchase_date',
            field=models.DateField(blank=True, verbose_name='Purchase date of this bulk roll'),
        ),
        migrations.AlterField(
            model_name='bulkfilm',
            name='source',
            field=models.CharField(blank=True, max_length=45, verbose_name='Place where this bulk roll was bought from'),
        ),
        migrations.AlterField(
            model_name='camera',
            name='acquired',
            field=models.DateField(blank=True, verbose_name='Date on which the camera was acquired'),
        ),
        migrations.AlterField(
            model_name='camera',
            name='condition',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='schema.Condition'),
        ),
        migrations.AlterField(
            model_name='camera',
            name='condition_notes',
            field=models.CharField(blank=True, max_length=150, verbose_name='Description of condition'),
        ),
        migrations.AlterField(
            model_name='camera',
            name='cost',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=6, verbose_name='Price paid for this camera'),
        ),
        migrations.AlterField(
            model_name='camera',
            name='datecode',
            field=models.CharField(blank=True, max_length=45, verbose_name='Date code of the camera, if different from the serial number'),
        ),
        migrations.AlterField(
            model_name='camera',
            name='lens',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='schema.Lens'),
        ),
        migrations.AlterField(
            model_name='camera',
            name='lost',
            field=models.DateField(blank=True, verbose_name='Date on which the camera was lost/sold/etc'),
        ),
        migrations.AlterField(
            model_name='camera',
            name='lost_price',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=6, verbose_name='Price at which the camera was sold'),
        ),
        migrations.AlterField(
            model_name='camera',
            name='manufactured',
            field=models.IntegerField(blank=True, verbose_name='Year of manufacture of the camera'),
        ),
        migrations.AlterField(
            model_name='camera',
            name='notes',
            field=models.CharField(blank=True, max_length=100, verbose_name='Freeform text field for extra notes'),
        ),
        migrations.AlterField(
            model_name='camera',
            name='own',
            field=models.BooleanField(blank=True, verbose_name='Whether the camera is currently owned'),
        ),
        migrations.AlterField(
            model_name='camera',
            name='serial',
            field=models.CharField(blank=True, max_length=45, verbose_name='Serial number of the camera'),
        ),
        migrations.AlterField(
            model_name='camera',
            name='source',
            field=models.CharField(blank=True, max_length=150, verbose_name='Where the camera was acquired from'),
        ),
        migrations.AlterField(
            model_name='cameramodel',
            name='af_points',
            field=models.IntegerField(blank=True, verbose_name='Number of autofocus points'),
        ),
        migrations.AlterField(
            model_name='cameramodel',
            name='battery_qty',
            field=models.IntegerField(blank=True, verbose_name='Quantity of batteries needed'),
        ),
        migrations.AlterField(
            model_name='cameramodel',
            name='battery_type',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='schema.Battery'),
        ),
        migrations.AlterField(
            model_name='cameramodel',
            name='body_type',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='schema.BodyType'),
        ),
        migrations.AlterField(
            model_name='cameramodel',
            name='bulb',
            field=models.BooleanField(blank=True, verbose_name='Whether the camera supports bulb (B) exposure'),
        ),
        migrations.AlterField(
            model_name='cameramodel',
            name='cable_release',
            field=models.BooleanField(blank=True, verbose_name='Whether the camera has the facility for a remote cable release'),
        ),
        migrations.AlterField(
            model_name='cameramodel',
            name='coldshoe',
            field=models.BooleanField(blank=True, verbose_name='Whether the camera has a coldshoe or accessory shoe'),
        ),
        migrations.AlterField(
            model_name='cameramodel',
            name='continuous_fps',
            field=models.DecimalField(blank=True, decimal_places=1, max_digits=4, verbose_name='The maximum rate at which the camera can shoot, in frames per second'),
        ),
        migrations.AlterField(
            model_name='cameramodel',
            name='coupled_metering',
            field=models.BooleanField(blank=True, verbose_name='Whether the cameras meter is coupled automatically'),
        ),
        migrations.AlterField(
            model_name='cameramodel',
            name='digital',
            field=models.BooleanField(blank=True, default=0, verbose_name='Whether this is a digital camera'),
        ),
        migrations.AlterField(
            model_name='cameramodel',
            name='discontinued',
            field=models.IntegerField(blank=True, verbose_name='Year in which the camera model was discontinued'),
        ),
        migrations.AlterField(
            model_name='cameramodel',
            name='dof_preview',
            field=models.BooleanField(blank=True, verbose_name='Whether the camera has depth of field preview'),
        ),
        migrations.AlterField(
            model_name='cameramodel',
            name='exposure_programs',
            field=models.ManyToManyField(blank=True, to='schema.ExposureProgram'),
        ),
        migrations.AlterField(
            model_name='cameramodel',
            name='ext_flash',
            field=models.BooleanField(blank=True, verbose_name=' Whether the camera supports an external flash'),
        ),
        migrations.AlterField(
            model_name='cameramodel',
            name='fixed_mount',
            field=models.BooleanField(blank=True, verbose_name='Whether the camera has a fixed lens'),
        ),
        migrations.AlterField(
            model_name='cameramodel',
            name='flash_metering',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='schema.FlashProtocol'),
        ),
        migrations.AlterField(
            model_name='cameramodel',
            name='focus_type',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='schema.FocusType'),
        ),
        migrations.AlterField(
            model_name='cameramodel',
            name='format',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='schema.Format'),
        ),
        migrations.AlterField(
            model_name='cameramodel',
            name='hotshoe',
            field=models.BooleanField(blank=True, verbose_name='Whether the camera has a hotshoe'),
        ),
        migrations.AlterField(
            model_name='cameramodel',
            name='int_flash',
            field=models.BooleanField(blank=True, verbose_name='Whether the camera has an integrated flash'),
        ),
        migrations.AlterField(
            model_name='cameramodel',
            name='int_flash_gn',
            field=models.IntegerField(blank=True, verbose_name='Guide number of internal flash'),
        ),
        migrations.AlterField(
            model_name='cameramodel',
            name='introduced',
            field=models.IntegerField(blank=True, verbose_name='Year in which the camera model was introduced'),
        ),
        migrations.AlterField(
            model_name='cameramodel',
            name='lensmodel',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='schema.LensModel'),
        ),
        migrations.AlterField(
            model_name='cameramodel',
            name='manufacturer',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='schema.Manufacturer'),
        ),
        migrations.AlterField(
            model_name='cameramodel',
            name='max_iso',
            field=models.IntegerField(blank=True, verbose_name='Maximum ISO the camera will accept for metering'),
        ),
        migrations.AlterField(
            model_name='cameramodel',
            name='meter_max_ev',
            field=models.IntegerField(blank=True, verbose_name='Highest EV/LV the built-in meter supports'),
        ),
        migrations.AlterField(
            model_name='cameramodel',
            name='meter_min_ev',
            field=models.IntegerField(blank=True, verbose_name='Lowest EV/LV the built-in meter supports'),
        ),
        migrations.AlterField(
            model_name='cameramodel',
            name='metering',
            field=models.BooleanField(blank=True, verbose_name='Whether the camera has built-in metering'),
        ),
        migrations.AlterField(
            model_name='cameramodel',
            name='metering_modes',
            field=models.ManyToManyField(blank=True, to='schema.MeteringMode'),
        ),
        migrations.AlterField(
            model_name='cameramodel',
            name='metering_type',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='schema.MeteringType'),
        ),
        migrations.AlterField(
            model_name='cameramodel',
            name='min_iso',
            field=models.IntegerField(blank=True, verbose_name='Minimum ISO the camera will accept for metering'),
        ),
        migrations.AlterField(
            model_name='cameramodel',
            name='mount',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='schema.Mount'),
        ),
        migrations.AlterField(
            model_name='cameramodel',
            name='negative_size',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='schema.NegativeSize'),
        ),
        migrations.AlterField(
            model_name='cameramodel',
            name='notes',
            field=models.CharField(blank=True, max_length=100, verbose_name='Freeform text field for extra notes'),
        ),
        migrations.AlterField(
            model_name='cameramodel',
            name='pc_sync',
            field=models.BooleanField(blank=True, verbose_name='Whether the camera has a PC sync socket for flash'),
        ),
        migrations.AlterField(
            model_name='cameramodel',
            name='power_drive',
            field=models.BooleanField(blank=True, verbose_name='Whether the camera has integrated motor drive'),
        ),
        migrations.AlterField(
            model_name='cameramodel',
            name='series',
            field=models.ManyToManyField(blank=True, to='schema.Series'),
        ),
        migrations.AlterField(
            model_name='cameramodel',
            name='shutter_model',
            field=models.CharField(blank=True, max_length=45, verbose_name='Model of shutter'),
        ),
        migrations.AlterField(
            model_name='cameramodel',
            name='shutter_speeds',
            field=models.ManyToManyField(blank=True, to='schema.ShutterSpeed'),
        ),
        migrations.AlterField(
            model_name='cameramodel',
            name='shutter_type',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='schema.ShutterType'),
        ),
        migrations.AlterField(
            model_name='cameramodel',
            name='time',
            field=models.BooleanField(blank=True, verbose_name='Whether the camera supports time (T) exposure'),
        ),
        migrations.AlterField(
            model_name='cameramodel',
            name='tripod',
            field=models.BooleanField(blank=True, verbose_name='Whether the camera has a tripod bush'),
        ),
        migrations.AlterField(
            model_name='cameramodel',
            name='video',
            field=models.BooleanField(blank=True, verbose_name='Whether the camera can take video/movie'),
        ),
        migrations.AlterField(
            model_name='cameramodel',
            name='viewfinder_coverage',
            field=models.IntegerField(blank=True, verbose_name='Percentage coverage of the viewfinder. Mostly applicable to SLRs.'),
        ),
        migrations.AlterField(
            model_name='cameramodel',
            name='weight',
            field=models.IntegerField(blank=True, verbose_name='Weight of the camera body (without lens or batteries) in grammes (g)'),
        ),
        migrations.AlterField(
            model_name='developer',
            name='chemistry',
            field=models.CharField(blank=True, max_length=45, verbose_name='The key chemistry on which this developer is based (e.g. phenidone)'),
        ),
        migrations.AlterField(
            model_name='developer',
            name='for_film',
            field=models.BooleanField(blank=True, verbose_name='Whether this developer can be used with film'),
        ),
        migrations.AlterField(
            model_name='developer',
            name='for_paper',
            field=models.BooleanField(blank=True, verbose_name='Whether this developer can be used with paper'),
        ),
        migrations.AlterField(
            model_name='developer',
            name='manufacturer',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='schema.Manufacturer'),
        ),
        migrations.AlterField(
            model_name='enlarger',
            name='acquired',
            field=models.DateField(blank=True, verbose_name='Date on which the enlarger was acquired'),
        ),
        migrations.AlterField(
            model_name='enlarger',
            name='cost',
            field=models.DecimalField(blank=True, decimal_places=1, max_digits=6, verbose_name='Purchase cost of the enlarger'),
        ),
        migrations.AlterField(
            model_name='enlarger',
            name='discontinued',
            field=models.IntegerField(blank=True, verbose_name='Year in which the enlarger was discontinued'),
        ),
        migrations.AlterField(
            model_name='enlarger',
            name='introduced',
            field=models.IntegerField(blank=True, verbose_name='Year in which the enlarger was introduced'),
        ),
        migrations.AlterField(
            model_name='enlarger',
            name='lost',
            field=models.DateField(blank=True, verbose_name='Date on which the enlarger was lost/sold'),
        ),
        migrations.AlterField(
            model_name='enlarger',
            name='lost_price',
            field=models.DecimalField(blank=True, decimal_places=1, max_digits=6, verbose_name='Sale price of the enlarger'),
        ),
        migrations.AlterField(
            model_name='enlarger',
            name='manufacturer',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='schema.Manufacturer'),
        ),
        migrations.AlterField(
            model_name='enlarger',
            name='negative_size',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='schema.NegativeSize'),
        ),
        migrations.AlterField(
            model_name='filmstock',
            name='colour',
            field=models.BooleanField(blank=True, verbose_name='Whether the film is colour'),
        ),
        migrations.AlterField(
            model_name='filmstock',
            name='iso',
            field=models.IntegerField(blank=True, verbose_name='Nominal ISO speed of the film'),
        ),
        migrations.AlterField(
            model_name='filmstock',
            name='manufacturer',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='schema.Manufacturer'),
        ),
        migrations.AlterField(
            model_name='filmstock',
            name='panchromatic',
            field=models.BooleanField(blank=True, verbose_name='Whether this film is panchromatic'),
        ),
        migrations.AlterField(
            model_name='filmstock',
            name='process',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='schema.Process'),
        ),
        migrations.AlterField(
            model_name='filter',
            name='attenuation',
            field=models.DecimalField(blank=True, decimal_places=1, max_digits=3, verbose_name='Attenuation of this filter in decimal stops'),
        ),
        migrations.AlterField(
            model_name='filter',
            name='manufacturer',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='schema.Manufacturer'),
        ),
        migrations.AlterField(
            model_name='filter',
            name='qty',
            field=models.IntegerField(blank=True, default=1, verbose_name='Quantity of these filters available'),
        ),
        migrations.AlterField(
            model_name='filter',
            name='thread',
            field=models.DecimalField(blank=True, decimal_places=1, max_digits=4, verbose_name='Diameter of screw thread in mm'),
        ),
        migrations.AlterField(
            model_name='flash',
            name='acquired',
            field=models.DateField(blank=True, verbose_name='Date this flash was acquired'),
        ),
        migrations.AlterField(
            model_name='flash',
            name='battery_powered',
            field=models.BooleanField(blank=True, verbose_name='Whether this flash takes batteries'),
        ),
        migrations.AlterField(
            model_name='flash',
            name='battery_qty',
            field=models.IntegerField(blank=True, verbose_name='Quantity of batteries needed in this flash'),
        ),
        migrations.AlterField(
            model_name='flash',
            name='battery_type',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='schema.Battery'),
        ),
        migrations.AlterField(
            model_name='flash',
            name='cost',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=6, verbose_name='Purchase cost of this flash'),
        ),
        migrations.AlterField(
            model_name='flash',
            name='dslr_safe',
            field=models.BooleanField(blank=True, verbose_name='Whether this flash is safe to use with a digital camera'),
        ),
        migrations.AlterField(
            model_name='flash',
            name='flash_protocol',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='schema.FlashProtocol'),
        ),
        migrations.AlterField(
            model_name='flash',
            name='gn_info',
            field=models.CharField(blank=True, max_length=45, verbose_name='Extra freeform info about how the guide number was measured'),
        ),
        migrations.AlterField(
            model_name='flash',
            name='guide_number',
            field=models.IntegerField(blank=True, verbose_name='Guide number of the flash'),
        ),
        migrations.AlterField(
            model_name='flash',
            name='hot_shoe',
            field=models.BooleanField(blank=True, verbose_name='Whether the flash has a hot shoe connection'),
        ),
        migrations.AlterField(
            model_name='flash',
            name='light_stand',
            field=models.BooleanField(blank=True, verbose_name='Whether the flash can be used on a light stand'),
        ),
        migrations.AlterField(
            model_name='flash',
            name='manual_control',
            field=models.BooleanField(blank=True, verbose_name='Whether this flash offers manual power control'),
        ),
        migrations.AlterField(
            model_name='flash',
            name='manufacturer',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='schema.Manufacturer'),
        ),
        migrations.AlterField(
            model_name='flash',
            name='own',
            field=models.BooleanField(blank=True, verbose_name='Whether we currently own this flash'),
        ),
        migrations.AlterField(
            model_name='flash',
            name='pc_sync',
            field=models.BooleanField(blank=True, verbose_name='Whether the flash has a PC sync socket'),
        ),
        migrations.AlterField(
            model_name='flash',
            name='swivel_head',
            field=models.BooleanField(blank=True, verbose_name='Whether this flash has a horizontal swivel head'),
        ),
        migrations.AlterField(
            model_name='flash',
            name='tilt_head',
            field=models.BooleanField(blank=True, verbose_name='Whether this flash has a vertical tilt head'),
        ),
        migrations.AlterField(
            model_name='flash',
            name='trigger_voltage',
            field=models.DecimalField(blank=True, decimal_places=1, max_digits=5, verbose_name='Trigger voltage of the flash, in Volts'),
        ),
        migrations.AlterField(
            model_name='flash',
            name='ttl',
            field=models.BooleanField(blank=True, verbose_name='Whether this flash supports TTL metering'),
        ),
        migrations.AlterField(
            model_name='flash',
            name='zoom',
            field=models.BooleanField(blank=True, verbose_name='Whether this flash can zoom'),
        ),
        migrations.AlterField(
            model_name='flashprotocol',
            name='manufacturer',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='schema.Manufacturer'),
        ),
        migrations.AlterField(
            model_name='focustype',
            name='name',
            field=models.CharField(max_length=45, primary_key=True, serialize=False, verbose_name='Name of focus type'),
        ),
        migrations.AlterField(
            model_name='format',
            name='digital',
            field=models.BooleanField(blank=True, verbose_name='Whether this is a digital format'),
        ),
        migrations.AlterField(
            model_name='format',
            name='format',
            field=models.CharField(max_length=45, unique=True, verbose_name='The name of this film/sensor format'),
        ),
        migrations.AlterField(
            model_name='format',
            name='negative_size',
            field=models.ManyToManyField(blank=True, to='schema.NegativeSize'),
        ),
        migrations.AlterField(
            model_name='lens',
            name='acquired',
            field=models.DateField(blank=True, verbose_name='Date on which this lens was acquired'),
        ),
        migrations.AlterField(
            model_name='lens',
            name='condition',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='schema.Condition'),
        ),
        migrations.AlterField(
            model_name='lens',
            name='condition_notes',
            field=models.CharField(blank=True, max_length=150, verbose_name='Description of condition'),
        ),
        migrations.AlterField(
            model_name='lens',
            name='cost',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=6, verbose_name='Price paid for this lens'),
        ),
        migrations.AlterField(
            model_name='lens',
            name='date_code',
            field=models.CharField(blank=True, max_length=45, verbose_name='Date code of this lens, if different from the serial number'),
        ),
        migrations.AlterField(
            model_name='lens',
            name='lost',
            field=models.DateField(blank=True, verbose_name='Date on which lens was lost/sold/disposed'),
        ),
        migrations.AlterField(
            model_name='lens',
            name='lost_price',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=6, verbose_name='Price for which the lens was sold'),
        ),
        migrations.AlterField(
            model_name='lens',
            name='manufactured',
            field=models.IntegerField(blank=True, verbose_name='Year in which this specific lens was manufactured'),
        ),
        migrations.AlterField(
            model_name='lens',
            name='notes',
            field=models.CharField(blank=True, max_length=45, verbose_name='Freeform notes field'),
        ),
        migrations.AlterField(
            model_name='lens',
            name='own',
            field=models.BooleanField(blank=True, verbose_name='Whether we currently own this lens'),
        ),
        migrations.AlterField(
            model_name='lens',
            name='serial',
            field=models.CharField(blank=True, max_length=45, verbose_name='Serial number of this lens'),
        ),
        migrations.AlterField(
            model_name='lens',
            name='source',
            field=models.CharField(blank=True, max_length=150, verbose_name='Place where the lens was acquired from'),
        ),
        migrations.AlterField(
            model_name='lensmodel',
            name='aperture_blades',
            field=models.IntegerField(blank=True, verbose_name='Number of aperture blades'),
        ),
        migrations.AlterField(
            model_name='lensmodel',
            name='autofocus',
            field=models.BooleanField(blank=True, verbose_name='Whether this lens has autofocus capability'),
        ),
        migrations.AlterField(
            model_name='lensmodel',
            name='closest_focus',
            field=models.IntegerField(blank=True, verbose_name='The closest focus possible with this lens, in cm'),
        ),
        migrations.AlterField(
            model_name='lensmodel',
            name='coating',
            field=models.CharField(blank=True, max_length=45, verbose_name='Notes about the lens coating type'),
        ),
        migrations.AlterField(
            model_name='lensmodel',
            name='diameter',
            field=models.IntegerField(blank=True, verbose_name='Width of lens in mm'),
        ),
        migrations.AlterField(
            model_name='lensmodel',
            name='discontinued',
            field=models.IntegerField(blank=True, verbose_name='Year in which this lens model was discontinued'),
        ),
        migrations.AlterField(
            model_name='lensmodel',
            name='elements',
            field=models.IntegerField(blank=True, verbose_name='Number of optical lens elements'),
        ),
        migrations.AlterField(
            model_name='lensmodel',
            name='exif_lenstype',
            field=models.CharField(blank=True, max_length=45, verbose_name='EXIF LensID number, if this lens has one officially registered. See documentation at http://www.sno.phy.queensu.ca/~phil/exiftool/TagNames/'),
        ),
        migrations.AlterField(
            model_name='lensmodel',
            name='filter_thread',
            field=models.DecimalField(blank=True, decimal_places=1, max_digits=4, verbose_name='Diameter of lens filter thread, in mm'),
        ),
        migrations.AlterField(
            model_name='lensmodel',
            name='fixed_mount',
            field=models.BooleanField(blank=True, verbose_name='Whether this is a fixed lens (i.e. on a compact camera)'),
        ),
        migrations.AlterField(
            model_name='lensmodel',
            name='formula',
            field=models.CharField(blank=True, max_length=45, verbose_name='Name of the type of lens formula (e.g. Tessar)'),
        ),
        migrations.AlterField(
            model_name='lensmodel',
            name='groups',
            field=models.IntegerField(blank=True, verbose_name='Number of optical groups'),
        ),
        migrations.AlterField(
            model_name='lensmodel',
            name='hood',
            field=models.CharField(blank=True, max_length=45, verbose_name='Model number of the compatible lens hood'),
        ),
        migrations.AlterField(
            model_name='lensmodel',
            name='image_circle',
            field=models.IntegerField(blank=True, verbose_name='Diameter of image circle projected by lens, in mm'),
        ),
        migrations.AlterField(
            model_name='lensmodel',
            name='introduced',
            field=models.IntegerField(blank=True, verbose_name='Year in which this lens model was introduced'),
        ),
        migrations.AlterField(
            model_name='lensmodel',
            name='length',
            field=models.IntegerField(blank=True, verbose_name='Length of lens in mm'),
        ),
        migrations.AlterField(
            model_name='lensmodel',
            name='magnification',
            field=models.DecimalField(blank=True, decimal_places=3, max_digits=5, verbose_name='Maximum magnification ratio of the lens, expressed like 0.765'),
        ),
        migrations.AlterField(
            model_name='lensmodel',
            name='manufacturer',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='schema.Manufacturer'),
        ),
        migrations.AlterField(
            model_name='lensmodel',
            name='max_aperture',
            field=models.DecimalField(blank=True, decimal_places=1, max_digits=4, verbose_name='Maximum (widest) aperture available on this lens (numerical part only, e.g. 2.8)'),
        ),
        migrations.AlterField(
            model_name='lensmodel',
            name='max_focal_length',
            field=models.IntegerField(blank=True, verbose_name='Longest focal length of this lens, in mm'),
        ),
        migrations.AlterField(
            model_name='lensmodel',
            name='min_aperture',
            field=models.DecimalField(blank=True, decimal_places=1, max_digits=4, verbose_name='Minimum (narrowest) aperture available on this lens (numerical part only, e.g. 22)'),
        ),
        migrations.AlterField(
            model_name='lensmodel',
            name='min_focal_length',
            field=models.IntegerField(blank=True, verbose_name='Shortest focal length of this lens, in mm'),
        ),
        migrations.AlterField(
            model_name='lensmodel',
            name='mount',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='schema.Mount'),
        ),
        migrations.AlterField(
            model_name='lensmodel',
            name='negative_size',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='schema.NegativeSize'),
        ),
        migrations.AlterField(
            model_name='lensmodel',
            name='nominal_max_angle_diag',
            field=models.IntegerField(blank=True, verbose_name='Nominal maximum diagonal field of view from manufacturer specs'),
        ),
        migrations.AlterField(
            model_name='lensmodel',
            name='nominal_min_angle_diag',
            field=models.IntegerField(blank=True, verbose_name='Nominal minimum diagonal field of view from manufacturer specs'),
        ),
        migrations.AlterField(
            model_name='lensmodel',
            name='notes',
            field=models.CharField(blank=True, max_length=100, verbose_name='Freeform notes field'),
        ),
        migrations.AlterField(
            model_name='lensmodel',
            name='rectilinear',
            field=models.BooleanField(blank=True, default=1, verbose_name='Whether this is a rectilinear lens'),
        ),
        migrations.AlterField(
            model_name='lensmodel',
            name='series',
            field=models.ManyToManyField(blank=True, to='schema.Series'),
        ),
        migrations.AlterField(
            model_name='lensmodel',
            name='shutter_model',
            field=models.CharField(blank=True, max_length=45, verbose_name='Name of the integrated shutter, if any'),
        ),
        migrations.AlterField(
            model_name='lensmodel',
            name='url',
            field=models.URLField(blank=True, verbose_name='URL to more information about this lens'),
        ),
        migrations.AlterField(
            model_name='lensmodel',
            name='weight',
            field=models.IntegerField(blank=True, verbose_name='Weight of this lens, in grammes (g)'),
        ),
        migrations.AlterField(
            model_name='lensmodel',
            name='zoom',
            field=models.BooleanField(blank=True, verbose_name='Whether this is a zoom lens'),
        ),
        migrations.AlterField(
            model_name='lightmeter',
            name='flash',
            field=models.BooleanField(blank=True, verbose_name='Whether the meter is capable of flash metering'),
        ),
        migrations.AlterField(
            model_name='lightmeter',
            name='incident',
            field=models.BooleanField(blank=True, verbose_name='Whether the meter is capable of incident-light metering'),
        ),
        migrations.AlterField(
            model_name='lightmeter',
            name='manufacturer',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='schema.Manufacturer'),
        ),
        migrations.AlterField(
            model_name='lightmeter',
            name='max_asa',
            field=models.IntegerField(blank=True, verbose_name='Maximum ISO/ASA that this meter is capable of handling'),
        ),
        migrations.AlterField(
            model_name='lightmeter',
            name='max_lv',
            field=models.IntegerField(blank=True, verbose_name='Maximum light value (LV/EV) that this meter is capable of handling'),
        ),
        migrations.AlterField(
            model_name='lightmeter',
            name='metering_type',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='schema.MeteringType'),
        ),
        migrations.AlterField(
            model_name='lightmeter',
            name='min_asa',
            field=models.IntegerField(blank=True, verbose_name='Minimum ISO/ASA that this meter is capable of handling'),
        ),
        migrations.AlterField(
            model_name='lightmeter',
            name='min_lv',
            field=models.IntegerField(blank=True, verbose_name='Minimum light value (LV/EV) that this meter is capable of handling'),
        ),
        migrations.AlterField(
            model_name='lightmeter',
            name='reflected',
            field=models.BooleanField(blank=True, verbose_name='Whether the meter is capable of reflected-light metering'),
        ),
        migrations.AlterField(
            model_name='lightmeter',
            name='spot',
            field=models.BooleanField(blank=True, verbose_name='Whether the meter is capable of spot metering'),
        ),
        migrations.AlterField(
            model_name='manufacturer',
            name='city',
            field=models.CharField(blank=True, max_length=45, verbose_name='City in which the manufacturer is based'),
        ),
        migrations.AlterField(
            model_name='manufacturer',
            name='country',
            field=models.CharField(blank=True, max_length=45, verbose_name='Country in which the manufacturer is based'),
        ),
        migrations.AlterField(
            model_name='manufacturer',
            name='dissolved',
            field=models.DateField(blank=True, verbose_name='Year in which the manufacturer was dissolved'),
        ),
        migrations.AlterField(
            model_name='manufacturer',
            name='founded',
            field=models.DateField(blank=True, verbose_name='Year in which the manufacturer was founded'),
        ),
        migrations.AlterField(
            model_name='manufacturer',
            name='url',
            field=models.URLField(blank=True, max_length=45, verbose_name='URL to the manufacturers main website'),
        ),
        migrations.AlterField(
            model_name='mount',
            name='digital_only',
            field=models.BooleanField(blank=True, default=0, verbose_name='Whether this mount is models.intended only for digital cameras'),
        ),
        migrations.AlterField(
            model_name='mount',
            name='fixed',
            field=models.BooleanField(default=0, verbose_name='Whether this is a fixed (non-interchangable) lens mount'),
        ),
        migrations.AlterField(
            model_name='mount',
            name='manufacturer',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='schema.Manufacturer'),
        ),
        migrations.AlterField(
            model_name='mount',
            name='mount',
            field=models.CharField(max_length=45, unique=True, verbose_name='Name of this lens mount (e.g. Canon FD)'),
        ),
        migrations.AlterField(
            model_name='mount',
            name='notes',
            field=models.CharField(blank=True, max_length=100, verbose_name='Freeform notes field'),
        ),
        migrations.AlterField(
            model_name='mount',
            name='purpose',
            field=models.CharField(blank=True, max_length=25, verbose_name='The intended purpose of this lens mount (e.g. camera, enlarger, projector)'),
        ),
        migrations.AlterField(
            model_name='mount',
            name='shutter_in_lens',
            field=models.BooleanField(blank=True, default=0, verbose_name='Whether this lens mount system incorporates the shutter models.IntegerFieldo the lens'),
        ),
        migrations.AlterField(
            model_name='mount',
            name='type',
            field=models.CharField(blank=True, max_length=25, verbose_name='The physical mount type of this lens mount (e.g. Screw, Bayonet, etc)'),
        ),
        migrations.AlterField(
            model_name='movie',
            name='camera',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='schema.Camera'),
        ),
        migrations.AlterField(
            model_name='movie',
            name='date_loaded',
            field=models.DateField(blank=True, verbose_name='Date that the filmstock was loaded into a camera'),
        ),
        migrations.AlterField(
            model_name='movie',
            name='date_processed',
            field=models.DateField(blank=True, verbose_name='Date on which this movie was processed'),
        ),
        migrations.AlterField(
            model_name='movie',
            name='date_shot',
            field=models.DateField(blank=True, verbose_name='Date on which this movie was shot'),
        ),
        migrations.AlterField(
            model_name='movie',
            name='description',
            field=models.CharField(blank=True, max_length=200, verbose_name='Description of this movie'),
        ),
        migrations.AlterField(
            model_name='movie',
            name='duration',
            field=models.DurationField(blank=True, verbose_name='Duration of this movie'),
        ),
        migrations.AlterField(
            model_name='movie',
            name='feet',
            field=models.IntegerField(blank=True, verbose_name='Length of this movie in feet'),
        ),
        migrations.AlterField(
            model_name='movie',
            name='filmstock',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='schema.FilmStock'),
        ),
        migrations.AlterField(
            model_name='movie',
            name='format',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='schema.Format'),
        ),
        migrations.AlterField(
            model_name='movie',
            name='fps',
            field=models.IntegerField(blank=True, verbose_name='Frame rate of this movie, in fps'),
        ),
        migrations.AlterField(
            model_name='movie',
            name='lens',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='schema.Lens'),
        ),
        migrations.AlterField(
            model_name='movie',
            name='process',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='schema.Process'),
        ),
        migrations.AlterField(
            model_name='movie',
            name='sound',
            field=models.BooleanField(blank=True, verbose_name='Whether this movie has sound'),
        ),
        migrations.AlterField(
            model_name='negative',
            name='aperture',
            field=models.DecimalField(blank=True, decimal_places=1, max_digits=4, verbose_name='Aperture used to take this picture (numerical part only)'),
        ),
        migrations.AlterField(
            model_name='negative',
            name='caption',
            field=models.CharField(blank=True, max_length=150, verbose_name='Caption of this picture'),
        ),
        migrations.AlterField(
            model_name='negative',
            name='date',
            field=models.DateTimeField(blank=True, verbose_name='Date & time on which this picture was taken'),
        ),
        migrations.AlterField(
            model_name='negative',
            name='exposure_program',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='schema.ExposureProgram'),
        ),
        migrations.AlterField(
            model_name='negative',
            name='filter',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='schema.Filter'),
        ),
        migrations.AlterField(
            model_name='negative',
            name='flash',
            field=models.BooleanField(blank=True, verbose_name='Whether flash was used'),
        ),
        migrations.AlterField(
            model_name='negative',
            name='focal_length',
            field=models.IntegerField(blank=True, verbose_name='If a zoom lens was used, specify the focal length of the lens'),
        ),
        migrations.AlterField(
            model_name='negative',
            name='latitude',
            field=models.DecimalField(blank=True, decimal_places=6, max_digits=9, verbose_name='Latitude of the location where the picture was taken'),
        ),
        migrations.AlterField(
            model_name='negative',
            name='lens',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='schema.Lens'),
        ),
        migrations.AlterField(
            model_name='negative',
            name='longitude',
            field=models.DecimalField(blank=True, decimal_places=6, max_digits=9, verbose_name='Longitude of the location where the picture was taken'),
        ),
        migrations.AlterField(
            model_name='negative',
            name='metering_mode',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='schema.MeteringMode'),
        ),
        migrations.AlterField(
            model_name='negative',
            name='notes',
            field=models.CharField(blank=True, max_length=200, verbose_name='Extra freeform notes about this exposure'),
        ),
        migrations.AlterField(
            model_name='negative',
            name='photographer',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='schema.Person'),
        ),
        migrations.AlterField(
            model_name='negative',
            name='shutter_speed',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='schema.ShutterSpeed'),
        ),
        migrations.AlterField(
            model_name='negative',
            name='teleconverter',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='schema.Teleconverter'),
        ),
        migrations.AlterField(
            model_name='negativesize',
            name='area',
            field=models.IntegerField(blank=True, verbose_name='Area of this negative size in sq. mm'),
        ),
        migrations.AlterField(
            model_name='negativesize',
            name='aspect_ratio',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=4, verbose_name='Aspect ratio of this negative size, expressed as a single decimal (e.g. 3:2 is expressed as 1.5)'),
        ),
        migrations.AlterField(
            model_name='negativesize',
            name='crop_factor',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=4, verbose_name='Crop factor of this negative size'),
        ),
        migrations.AlterField(
            model_name='negativesize',
            name='height',
            field=models.DecimalField(blank=True, decimal_places=1, max_digits=4, verbose_name='Height of the negative size in mm'),
        ),
        migrations.AlterField(
            model_name='negativesize',
            name='name',
            field=models.CharField(max_length=45, unique=True, verbose_name='Common name of the negative size (e.g. 35mm, 6x7, etc)'),
        ),
        migrations.AlterField(
            model_name='negativesize',
            name='width',
            field=models.DecimalField(blank=True, decimal_places=1, max_digits=4, verbose_name='Width of the negative size in mm'),
        ),
        migrations.AlterField(
            model_name='order',
            name='added',
            field=models.DateField(blank=True, verbose_name='Date that the order was placed'),
        ),
        migrations.AlterField(
            model_name='order',
            name='height',
            field=models.IntegerField(blank=True, verbose_name='Height of print to be made'),
        ),
        migrations.AlterField(
            model_name='order',
            name='print',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='schema.Print'),
        ),
        migrations.AlterField(
            model_name='order',
            name='printed',
            field=models.BooleanField(blank=True, verbose_name='Whether the print has been made'),
        ),
        migrations.AlterField(
            model_name='order',
            name='width',
            field=models.IntegerField(blank=True, verbose_name='Width of print to be made'),
        ),
        migrations.AlterField(
            model_name='paperstock',
            name='colour',
            field=models.BooleanField(blank=True, verbose_name='Whether this is a colour paper'),
        ),
        migrations.AlterField(
            model_name='paperstock',
            name='finish',
            field=models.CharField(blank=True, max_length=25, verbose_name='The finish of the paper surface'),
        ),
        migrations.AlterField(
            model_name='paperstock',
            name='manufacturer',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='schema.Manufacturer'),
        ),
        migrations.AlterField(
            model_name='paperstock',
            name='resin_coated',
            field=models.BooleanField(blank=True, verbose_name='Whether the paper is resin-coated'),
        ),
        migrations.AlterField(
            model_name='paperstock',
            name='tonable',
            field=models.BooleanField(blank=True, verbose_name='Whether this paper accepts chemical toning'),
        ),
        migrations.AlterField(
            model_name='person',
            name='name',
            field=models.CharField(max_length=45, unique=True, verbose_name='Name of the photographer'),
        ),
        migrations.AlterField(
            model_name='print',
            name='aperture',
            field=models.DecimalField(blank=True, decimal_places=1, max_digits=3, verbose_name='Aperture used to make this print (numerical part only, e.g. 5.6)'),
        ),
        migrations.AlterField(
            model_name='print',
            name='archive',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='schema.Archive'),
        ),
        migrations.AlterField(
            model_name='print',
            name='bleach_time',
            field=models.DurationField(blank=True, verbose_name='Duration of bleaching'),
        ),
        migrations.AlterField(
            model_name='print',
            name='date',
            field=models.DateField(blank=True, verbose_name='The date that the print was made'),
        ),
        migrations.AlterField(
            model_name='print',
            name='developer',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='schema.Developer'),
        ),
        migrations.AlterField(
            model_name='print',
            name='development_time',
            field=models.DurationField(blank=True, verbose_name='Development time of this print'),
        ),
        migrations.AlterField(
            model_name='print',
            name='enlarger',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='schema.Enlarger'),
        ),
        migrations.AlterField(
            model_name='print',
            name='exposure_time',
            field=models.DurationField(blank=True, verbose_name='Exposure time of this print'),
        ),
        migrations.AlterField(
            model_name='print',
            name='filtration_grade',
            field=models.DecimalField(blank=True, decimal_places=1, max_digits=2, verbose_name='Contrast grade of paper used'),
        ),
        migrations.AlterField(
            model_name='print',
            name='fine',
            field=models.BooleanField(blank=True, verbose_name='Whether this is a fine print'),
        ),
        migrations.AlterField(
            model_name='print',
            name='height',
            field=models.DecimalField(blank=True, decimal_places=1, max_digits=4, verbose_name='Height of the print in inches'),
        ),
        migrations.AlterField(
            model_name='print',
            name='lens',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='schema.Lens'),
        ),
        migrations.AlterField(
            model_name='print',
            name='location',
            field=models.CharField(blank=True, max_length=100, verbose_name='The place where this print is currently'),
        ),
        migrations.AlterField(
            model_name='print',
            name='notes',
            field=models.CharField(blank=True, max_length=200, verbose_name='Freeform notes about this print, e.g. dodging, burning & complex toning'),
        ),
        migrations.AlterField(
            model_name='print',
            name='own',
            field=models.BooleanField(blank=True, verbose_name='Whether we currently own this print'),
        ),
        migrations.AlterField(
            model_name='print',
            name='paper_stock',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='schema.PaperStock'),
        ),
        migrations.AlterField(
            model_name='print',
            name='printer',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='schema.Person'),
        ),
        migrations.AlterField(
            model_name='print',
            name='sold_price',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=6, verbose_name='Sale price of the print'),
        ),
        migrations.AlterField(
            model_name='print',
            name='toner',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='schema.Toner'),
        ),
        migrations.AlterField(
            model_name='print',
            name='toner_dilution',
            field=models.CharField(blank=True, max_length=8, verbose_name='Dilution of the first toner used to make this print'),
        ),
        migrations.AlterField(
            model_name='print',
            name='toner_time',
            field=models.DurationField(blank=True, verbose_name='Duration of first toning'),
        ),
        migrations.AlterField(
            model_name='print',
            name='width',
            field=models.DecimalField(blank=True, decimal_places=1, max_digits=4, verbose_name='Width of the print in inches'),
        ),
        migrations.AlterField(
            model_name='process',
            name='colour',
            field=models.BooleanField(blank=True, verbose_name='Whether this is a colour process'),
        ),
        migrations.AlterField(
            model_name='process',
            name='name',
            field=models.CharField(max_length=25, unique=True, verbose_name='Name of this developmenmt process (e.g. C-41, E-6)'),
        ),
        migrations.AlterField(
            model_name='process',
            name='positive',
            field=models.BooleanField(blank=True, verbose_name='Whether this is a positive/reversal process'),
        ),
        migrations.AlterField(
            model_name='projector',
            name='cine',
            field=models.BooleanField(blank=True, verbose_name='Whether this is a cine (movie) projector'),
        ),
        migrations.AlterField(
            model_name='projector',
            name='manufacturer',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='schema.Manufacturer'),
        ),
        migrations.AlterField(
            model_name='projector',
            name='mount',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='schema.Mount'),
        ),
        migrations.AlterField(
            model_name='projector',
            name='negative_size',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='schema.NegativeSize'),
        ),
        migrations.AlterField(
            model_name='projector',
            name='own',
            field=models.BooleanField(blank=True, verbose_name='Whether we currently own this projector'),
        ),
        migrations.AlterField(
            model_name='repair',
            name='camera',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='schema.Camera'),
        ),
        migrations.AlterField(
            model_name='repair',
            name='date',
            field=models.DateField(blank=True, verbose_name='The date of the repair'),
        ),
        migrations.AlterField(
            model_name='repair',
            name='description',
            field=models.CharField(blank=True, max_length=500, verbose_name='Longer description of the repair'),
        ),
        migrations.AlterField(
            model_name='repair',
            name='lens',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='schema.Lens'),
        ),
        migrations.AlterField(
            model_name='scan',
            name='colour',
            field=models.BooleanField(blank=True, verbose_name='Whether this is a colour image'),
        ),
        migrations.AlterField(
            model_name='scan',
            name='date',
            field=models.DateField(blank=True, verbose_name='Date that this scan was made'),
        ),
        migrations.AlterField(
            model_name='scan',
            name='height',
            field=models.IntegerField(blank=True, verbose_name='Height of the scanned image in pixels'),
        ),
        migrations.AlterField(
            model_name='scan',
            name='negative',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='schema.Negative'),
        ),
        migrations.AlterField(
            model_name='scan',
            name='print',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='schema.Print'),
        ),
        migrations.AlterField(
            model_name='scan',
            name='width',
            field=models.IntegerField(blank=True, verbose_name='Width of the scanned image in pixels'),
        ),
        migrations.AlterField(
            model_name='series',
            name='name',
            field=models.CharField(max_length=45, unique=True, verbose_name='Name of this collection, e.g. Canon FD SLRs'),
        ),
        migrations.AlterField(
            model_name='shuttertype',
            name='type',
            field=models.CharField(max_length=45, unique=True, verbose_name='Name of the shutter type (e.g. Focal plane, Leaf, etc)'),
        ),
        migrations.AlterField(
            model_name='teleconverter',
            name='elements',
            field=models.IntegerField(blank=True, verbose_name='Number of optical elements used in this teleconverter'),
        ),
        migrations.AlterField(
            model_name='teleconverter',
            name='factor',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=4, verbose_name='Magnification factor of this teleconverter (numerical part only, e.g. 1.4)'),
        ),
        migrations.AlterField(
            model_name='teleconverter',
            name='groups',
            field=models.IntegerField(blank=True, verbose_name='Number of optical groups used in this teleconverter'),
        ),
        migrations.AlterField(
            model_name='teleconverter',
            name='manufacturer',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='schema.Manufacturer'),
        ),
        migrations.AlterField(
            model_name='teleconverter',
            name='mount',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='schema.Mount'),
        ),
        migrations.AlterField(
            model_name='teleconverter',
            name='multicoated',
            field=models.BooleanField(blank=True, verbose_name='Whether this teleconverter is multi-coated'),
        ),
        migrations.AlterField(
            model_name='toner',
            name='formulation',
            field=models.CharField(blank=True, max_length=45, verbose_name='Chemical formulation of the toner'),
        ),
        migrations.AlterField(
            model_name='toner',
            name='manufacturer',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='schema.Manufacturer'),
        ),
        migrations.AlterField(
            model_name='toner',
            name='stock_dilution',
            field=models.CharField(blank=True, max_length=10, verbose_name='Stock dilution of the toner'),
        ),
    ]
